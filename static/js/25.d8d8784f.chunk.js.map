{"version":3,"file":"static/js/25.d8d8784f.chunk.js","mappings":"sLAGA,MAAMA,EAAa,IAAIC,KA6GvB,QA3GA,WACE,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,OACxCC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,IACxCG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,IAClCK,EAASC,IAAcN,EAAAA,EAAAA,WAAS,IAChCO,EAAaC,IAAkBR,EAAAA,EAAAA,UAAS,MAsE/C,OApEAS,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQC,EAAAA,EAAQC,IAAI,oBAE1B,GADAC,QAAQC,IAAI,wBAAyBJ,GACjCA,EACFd,EAAWY,eAAeE,GAC1BF,EAAeE,GAGfd,EACGmB,4BACAC,MAAMC,IACL,GAAIA,GAAQA,EAAKC,KAAM,CACrB,MAAMC,EAASF,EAAKC,KAAKE,GACzBrB,EAAe,CACbsB,MAAOJ,EAAKC,KAAKI,KACjBC,OAAQN,EAAKC,KAAKM,QACfC,KAAKF,GAAWA,EAAOD,OACvBI,KAAK,MACRC,MAAOV,EAAKC,KAAKS,MAAML,KACvBM,MAAOX,EAAKC,KAAKS,MAAME,OAAO,GAAGC,IACjCV,GAAID,IAENjB,EAAee,EAAKc,YAAc,KAClC3B,EAAYa,EAAKC,KAAKc,YAAc,KAGpCpC,EACGqC,sBAAsB,CAACd,IACvBH,MAAMkB,IACL5B,EAAW4B,EAAS,GAAG,IAExBC,OAAOC,GACNvB,QAAQuB,MAAM,8BAA+BA,IAEnD,KAEDD,OAAOC,GAAUvB,QAAQuB,MAAM,+BAAgCA,SAC7D,CAEL,MAIMC,EAAU,oDAJCC,uEACGA,yDAElB,0EAEFC,OAAOC,SAASC,KAAOJ,CACzB,IACC,KAuBDK,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQC,SAAA,EACrBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UACfD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,CACzC9C,GACC4C,EAAAA,EAAAA,MAAAI,EAAAA,SAAA,CAAAF,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAC7BC,EAAAA,EAAAA,KAAA,OACEF,UAAU,cACVI,IAAKjD,EAAY8B,MACjBoB,IAAKlD,EAAYuB,MACjB4B,MAAO,IACPC,OAAQ,SAGZR,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAAD,SAAK9C,EAAYuB,SACjBwB,EAAAA,EAAAA,KAAA,KAAAD,SAAI9C,EAAYyB,UAChBsB,EAAAA,EAAAA,KAAA,KAAAD,SAAI9C,EAAY6B,eAIpBkB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,4BAEJvC,IAAWwC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,0BACfC,EAAAA,EAAAA,KAAA,UAAQM,QApCUC,KAClB7C,GACFX,EACGyD,aACArC,MAAK,IAAMH,QAAQC,IAAI,2BACvBqB,OAAOC,GACNvB,QAAQuB,MAAM,gCAAiCA,IAErD,EA4BqCQ,SAAC,aAEpCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAGrB,C","sources":["components/Spotify/Styles/Style1.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Cookies from \"js-cookie\";\nconst spotifyApi = new SpotifyWebApi();\n\nfunction Style1() {\n  const [songDetails, setSongDetails] = useState(null);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [isLiked, setIsLiked] = useState(false);\n  const [accessToken, setAccessToken] = useState(null);\n\n  useEffect(() => {\n    const token = Cookies.get(\"spotifyAuthToken\");\n    console.log(\"Spotify Access Token:\", token);\n    if (token) {\n      spotifyApi.setAccessToken(token);\n      setAccessToken(token);\n\n      // Fetch currently playing song\n      spotifyApi\n        .getMyCurrentPlaybackState()\n        .then((data) => {\n          if (data && data.item) {\n            const songId = data.item.id;\n            setSongDetails({\n              title: data.item.name,\n              artist: data.item.artists\n                .map((artist) => artist.name)\n                .join(\", \"),\n              album: data.item.album.name,\n              image: data.item.album.images[0].url,\n              id: songId,\n            });\n            setCurrentTime(data.progress_ms / 1000);\n            setDuration(data.item.duration_ms / 1000);\n\n            // Check if the song is liked\n            spotifyApi\n              .containsMySavedTracks([songId])\n              .then((response) => {\n                setIsLiked(response[0]);\n              })\n              .catch((error) =>\n                console.error(\"Error checking like status:\", error)\n              );\n          }\n        })\n        .catch((error) => console.error(\"Error fetching song details:\", error));\n    } else {\n      // Redirect to Spotify login\n      const clientId = process.env.REACT_APP_SPOTIFY_CLIENT_ID;\n      const redirectUri = process.env.REACT_APP_SPOTIFY_REDIRECT_URI;\n      const scopes =\n        \"user-read-playback-state user-modify-playback-state user-library-read\";\n      const authUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&redirect_uri=${redirectUri}&scope=${scopes}`;\n      window.location.href = authUrl;\n    }\n  }, []);\n\n  const handlePlaybackControl = (action) => {\n    const token = Cookies.get(\"spotifyAuthToken\");\n    if (token) {\n      spotifyApi[action]().catch((error) =>\n        console.error(`Error performing ${action}:`, error)\n      );\n    }\n  };\n\n  const handleNextTrack = () => {\n    if (accessToken) {\n      spotifyApi\n        .skipToNext()\n        .then(() => console.log(\"Skipped to next track\"))\n        .catch((error) =>\n          console.error(\"Error skipping to next track:\", error)\n        );\n    }\n  };\n\n  return (\n    <div className=\"center\">\n      <div className=\"left\"></div>\n      <div className=\"middle d-center stack gap-4\">\n        {songDetails ? (\n          <>\n            <div className=\"photo d-center\">\n              <img\n                className=\"rounded-2xl\"\n                src={songDetails.image}\n                alt={songDetails.title}\n                width={400}\n                height={400}\n              />\n            </div>\n            <div className=\"song-info\">\n              <h2>{songDetails.title}</h2>\n              <p>{songDetails.artist}</p>\n              <p>{songDetails.album}</p>\n            </div>\n          </>\n        ) : (\n          <p>Loading song details...</p>\n        )}\n        {isLiked && <p>You liked this song!</p>}\n        <button onClick={handleNextTrack}>Next</button>\n      </div>\n      <div className=\"right\"></div>\n    </div>\n  );\n}\n\nexport default Style1;\n"],"names":["spotifyApi","SpotifyWebApi","songDetails","setSongDetails","useState","currentTime","setCurrentTime","duration","setDuration","isLiked","setIsLiked","accessToken","setAccessToken","useEffect","token","Cookies","get","console","log","getMyCurrentPlaybackState","then","data","item","songId","id","title","name","artist","artists","map","join","album","image","images","url","progress_ms","duration_ms","containsMySavedTracks","response","catch","error","authUrl","process","window","location","href","_jsxs","className","children","_jsx","_Fragment","src","alt","width","height","onClick","handleNextTrack","skipToNext"],"sourceRoot":""}