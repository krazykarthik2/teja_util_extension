{"version":3,"file":"static/js/800.ccc1dfce.chunk.js","mappings":"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","sources":["components/KeyboardMapper/AllLayouts.js","components/KeyboardMapper/KeyboardMapper.jsx","components/LandingPage/Styles/Style10.js"],"sourcesContent":["const SpaceKey = {\n  key: \" \",\n  show:\"/krazykarthik2\",\n  expand:true,\n  reactOther:false\n}\nconst ShiftKey = { key: \"Shift\", show: \"Shift\" ,expand:true,reactOther:true};\nconst CapsLockKey = { key: \"CapsLock\", show: \"CapsLock\" ,expand:true,reactOther:true};\nconst EnterKey = { key: \"Enter\", show: \"Enter\" ,expand:true,reactOther:true};\nconst ControlKey = { key: \"Control\", show: \"Ctrl\" ,expand:false,reactOther:true};\nconst AltKey = { key: \"Alt\", show: \"Alt\" ,expand:false,reactOther:true};\nconst TabKey = { key: \"Tab\", show: \"Tab\" ,expand:true,reactOther:true};\nconst BackspaceKey = { key: \"Backspace\", show: \"Backspace\" ,expand:false,reactOther:true};\n\nconst KeysAlphaNormal = [\n  [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"],\n  [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"],\n  [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\"],\n];\nconst KeysAlphaShift = KeysAlphaNormal.map((e) =>\n  e.map((e) => e.toUpperCase())\n);\nconst KeysAlpha = [KeysAlphaNormal, KeysAlphaShift];\nconst KeysAlphaNumericNormal = [\n  [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"],\n  [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"],\n  [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"],\n  [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\"],\n];\nconst KeysAlphaNumericShift = [\n  [\"!\", \"@\", \"#\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\",],\n  [\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"],\n  [\"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"],\n  [\"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"],\n];\nconst KeysAlphaNumeric = [KeysAlphaNumericNormal, KeysAlphaNumericShift];\nconst KeysAllNormal = [\n  [\n    \"`\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"0\",\n    \"-\",\n    \"=\",\n    BackspaceKey,\n  ],\n  [\n    TabKey,\n    \"q\",\n    \"w\",\n    \"e\",\n    \"r\",\n    \"t\",\n    \"y\",\n    \"u\",\n    \"i\",\n    \"o\",\n    \"p\",\n    \"[\",\n    \"]\",\n    \"\\\\\",\n  ],\n  [CapsLockKey, \"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \";\", \"'\", EnterKey],\n  [ShiftKey, \"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \",\", \".\", \"/\", ShiftKey],\n  [ControlKey, AltKey, SpaceKey, AltKey, ControlKey],\n];\nconst KeysAllShift = [\n  [\n    \"~\",\n    \"!\",\n    \"@\",\n    \"#\",\n    \"$\",\n    \"%\",\n    \"^\",\n    \"&\",\n    \"*\",\n    \"(\",\n    \")\",\n    \"_\",\n    \"+\",\n    BackspaceKey,\n  ],\n  [\n    TabKey,\n    \"Q\",\n    \"W\",\n    \"E\",\n    \"R\",\n    \"T\",\n    \"Y\",\n    \"U\",\n    \"I\",\n    \"O\",\n    \"P\",\n    \"{\",\n    \"}\",\n    \"|\",\n  ],\n  [CapsLockKey, \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\", \":\", '\"', EnterKey],\n  [ShiftKey, \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\", \"<\", \">\", \"?\", ShiftKey],\n  [ControlKey, AltKey, SpaceKey, AltKey, ControlKey],\n];\nconst KeysAll = [KeysAllNormal, KeysAllShift];\nconst AllLayouts = {\n  //alphabet, alphanumeric, all\n  alphabet: KeysAlpha,\n  alphanumeric: KeysAlphaNumeric,\n  all: KeysAll,\n};\nexport function ModifyKey(key,isCapsLock,isShift){\n  if(typeof key == \"string\") return isCapsLock!=isShift ? key.toUpperCase() : key.toLowerCase();\n  else return {...key, key:key.key.toUpperCase()};\n}\nexport default AllLayouts;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  delayOptions,\n  LayoutOptions,\n  selectKeyboardDelay,\n  selectKeyboardLayout,\n  setKeyboardDelay,\n  setKeyboardLayout,\n} from \"../../redux/typingSlice\";\nimport AllLayouts from \"./AllLayouts\";\nimport { ModifyKey } from \"./AllLayouts\";\n\nfunction KeyboardMapper() {\n  const [key, setKey] = useState(\"\");\n  const [Shift, setShift] = useState(false);\n  const [Ctrl, setCtrl] = useState(false);\n  const [Alt, setAlt] = useState(false);\n  const [CapsLock, setCapsLock] = useState(false);\n  const keyLayoutPreference = useSelector(selectKeyboardLayout);\n  const keyboardDelay = useSelector(selectKeyboardDelay);\n  const [keyLayout, setKeyLayout] = useState([]);\n  useEffect(() => {\n    setKeyLayout(AllLayouts[keyLayoutPreference]);\n  }, [keyLayoutPreference]);\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      setKey(event.key);\n      setShift(event.shiftKey || event.key === \"Shift\");\n      setCtrl(event.ctrlKey);\n      setAlt(event.altKey);\n      setCapsLock(event.getModifierState(\"CapsLock\"));\n    };\n    const handleKeyUp = (event) => {\n      if (event.key === \"Shift\") setShift(false);\n      if (event.key === \"Control\") setCtrl(false);\n      if (event.key === \"Alt\") setAlt(false);\n      setCapsLock(event.getModifierState(\"CapsLock\"));\n      setKey(\"\");\n    };\n    document.addEventListener(\"keydown\", handleKeyDown);\n    document.addEventListener(\"keyup\", handleKeyUp);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n      document.removeEventListener(\"keyup\", handleKeyUp);\n    };\n  }, []);\n  useEffect(()=>{\n\n    const onDocumentBlur = (event)=>{\n      setKey(\"\");\n      setShift(false);\n      setCtrl(false);\n      setAlt(false);\n    }\n    const onDocumentFocus = (event)=>{\n      // console.log(event)\n    }\n    window.addEventListener(\"focus\", onDocumentFocus);\n    window.addEventListener(\"blur\", onDocumentBlur);\n    return () => {\n      window.removeEventListener(\"focus\", onDocumentFocus);\n      window.removeEventListener(\"blur\", onDocumentBlur);\n    };\n  },[])\n  const dispatch = useDispatch();\n  const setKeyLayoutPreference = (layout) => {\n    dispatch(setKeyboardLayout(layout));\n  };\n  const setKeyBoardDelayPreference = (delay) => {\n    dispatch(setKeyboardDelay(delay));\n  };\n  return (\n    <div className=\"stack items-center gap-10\">\n      <div className=\"flex d-center gap-5\">\n        <div className=\"bg-gray-700 rounded-lg px-10 py-2 gap-5 d-center\">\n          {LayoutOptions.map((layout, i) => (\n            <button\n              key={i}\n              className={\n                keyLayoutPreference === layout\n                  ? \"text-red-400\"\n                  : \"text-gray-400\"\n              }\n              onClick={() => setKeyLayoutPreference(layout)}\n            >\n              {layout}\n            </button>\n          ))}\n        </div>\n        <div className=\"bg-gray-700 rounded-lg px-10 py-2 gap-5 d-center\">\n          {delayOptions.map((delay, i) => (\n            <button\n              key={i}\n              className={\n                keyboardDelay === delay ? \"text-red-400\" : \"text-gray-400\"\n              }\n              onClick={() => setKeyBoardDelayPreference(delay)}\n            >\n              {delay}\n            </button>\n          ))}\n        </div>\n      </div>\n      <div className=\"keyboard stack items-center gap-2\">\n        {keyLayout?.[Shift ? 1 : 0]?.map((row, i) => (\n          <div\n            key={i}\n            className=\"flex justify-center gap-1 items-stretch w-full\"\n          >\n            {row.map((__key, i) => (\n              <Key\n                key={i}\n                {...{\n                  __key: ModifyKey(__key, CapsLock, Shift),\n                  i,\n                  isActive: __key === key || __key?.key === key,\n                  isSthActive: key != \"\",\n                  delay: keyboardDelay,\n                  CapsLock: CapsLock,\n                }}\n              />\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\nconst Bumps = () => {\n  return <div className=\"w-4 min-h-1 rounded-full bg-[#488] flex\"></div>;\n};\n\nfunction Key({\n  __key,\n  i,\n  isActive = false,\n  isSthActive = false,\n  delay,\n  CapsLock,\n}) {\n  const reactOther =\n    isSthActive && !isActive\n      ? typeof __key == \"string\"\n        ? true\n        : __key?.reactOther\n        ? true\n        : false\n      : false;\n  return (\n    <div\n      key={i}\n      className={[\n        `stack justify-center items-center p-5 h-10 mx-1 rounded-lg text-white transition duration-${delay}`,\n        typeof __key == \"string\" ? \"\" : __key?.expand ? \"w-full\" : \"\",\n        reactOther ? \"scale-[1.05]\" : \"\",\n        isActive\n          ? \"bg-[#999] scale-[.8]\"\n          : `bg-[#111]  transition duration-${delay}`,\n      ].join(\" \")}\n    >\n      <div className=\"d-center gap-1\">\n        <div>{typeof __key == \"string\" ? __key : __key?.show}</div>\n        {(typeof __key == \"string\" ? __key : __key?.show) == \"CapsLock\" ? (\n          <div\n            className={\n              \"w-3 h-3 rounded-full \" + (CapsLock ? \"bg-[#ccc]\" : \"bg-[#111]\")\n            }\n          ></div>\n        ) : null}\n      </div>\n      {typeof __key == \"string\" && [\"j\", \"f\"].includes(__key.toLowerCase()) && (\n        <Bumps />\n      )}\n    </div>\n  );\n}\n\nexport default KeyboardMapper;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  modeOptions,\n  selectKeyboardLayout,\n  selectTapeMode,\n  selectTypingSettings,\n  setTapeModeMovePref,\n  setTypingMode,\n  setWords,\n  tapeModeOptions,\n  wordOptions,\n} from \"../../../redux/typingSlice\";\nimport { getRandomQuote, getRandomWords } from \"../../../util/jsutil\";\nimport KeyboardMapper from \"../../KeyboardMapper/KeyboardMapper\";\nimport Terminal from \"../../Terminal/Terminal\";\nimport { alternateDiff, Cursor } from \"../../TypingPage/TypingPage\";\nimport { getFormattedText, withoutLast } from \"../../TypingPage/util\";\nimport { GithubBtn, LoggedInAs, ShareBtn, VersionBtn } from \"../pins\";\nimport \"./Style10.css\";\nfunction Diff({\n  source,\n  change,\n  fadeOut = false,\n  readyFlag = true,\n  setReadyFlag = () => {},\n}) {\n  const [list, diff_list] = alternateDiff(source, change);\n  const list_spaced = list.map((e) => e?.split(\" \"));\n\n  return (\n    source.length != change.length || (\n      <div className=\"flex d-center gap-0\">\n        {list.map((e, i) => {\n          return (\n            <div className=\"d-center gap-2\" key={i}>\n              {list_spaced[i].map(\n                // word:1 word:last has no margin\n                (ee, ii) => {\n                  return (\n                    <div\n                      className={\n                        \" before-diff-\" +\n                        (ii == 0) +\n                        \" after-diff-\" +\n                        (ii == list_spaced[i].length - 1)\n                      }\n                      key={ii}\n                    >\n                      {ee?.split().map((eee, iii) => (\n                        <span\n                          key={iii}\n                          className={\n                            diff_list[i] === null\n                              ? \"text-gray-400\"\n                              : diff_list[i]\n                              ? \"text-green-400\"\n                              : \"text-red-400\"\n                          }\n                        >\n                          {eee}\n                        </span>\n                      ))}\n                    </div>\n                  );\n                }\n              )}\n            </div>\n          );\n        })}\n      </div>\n    )\n  );\n}\n\nconst BEFORELIMIT = 25,\n  AFTERLIMIT = 25;\nconst TypeWriter = () => {\n  const inputRef = React.useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, [inputRef]);\n  const [input, setInput] = useState(\"\");\n  const [isActive, setIsActive] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const [text, setText] = useState(\"my hovercraft is full of eels\");\n  const [stats, setStats] = useState(null);\n  const navigate = useNavigate();\n  const { punc, num, capitalize, mode, words } =\n    useSelector(selectTypingSettings);\n  const { move } = useSelector(selectTapeMode);\n  useEffect(() => {\n    let changeThis = !isActive;\n    if (mode == \"quote\")\n      getRandomQuote().then((q) => {\n        if (!changeThis) return false;\n        let x = q[0];\n        x = getFormattedText(x, capitalize, punc, num);\n        console.log(x);\n        setText(x);\n      });\n    if (mode == \"words\" || mode == \"timeLimit\")\n      getRandomWords(words).then((q) => {\n        if (!changeThis) return false;\n        let x = q.join(\" \");\n        x = getFormattedText(x, capitalize, punc, num);\n        console.log(x);\n        setText(x);\n      });\n    return () => {\n      changeThis = false;\n    };\n  }, [punc, num, capitalize, isActive, mode, words]);\n  const handleInput = (e) => {\n    if (e.target.value == \"\") {\n      setIsActive(false);\n      setStartTime(null);\n      setInput(\"\");\n    }\n    if (!text) {\n      setStartTime(null);\n      return false;\n    }\n    if (!isActive) {\n      setIsActive(true);\n      setStartTime(new Date());\n    }\n    setInput(e.target.value);\n    if (e.target.value.length >= text.length) {\n      setIsActive(false);\n      const stats = calculateStats();\n      setStats(stats);\n      navigate(\"/results\", {\n        state: { stats, tryAgain: \"/keyboard?style=10\" },\n      });\n    }\n  };\n\n  const calculateStats = useCallback(() => {\n    const endTime = new Date();\n    const timeElapsed = (endTime - startTime) / 1000; // in seconds\n    const __input = input.trim();\n    const __text = text.trim();\n    const total_length = __input.length;\n    const raw_wpm = Math.round((total_length / (5 * timeElapsed)) * 60);\n    const correctChars = __input\n      .split(\"\")\n      .filter((e, i) => e == __text[i]).length;\n    const acc = correctChars / total_length;\n    const wpm = Math.round(raw_wpm * acc);\n    const accuracy = Math.round(acc * 100);\n    window.stats = {\n      wpm: wpm,\n      accuracy,\n      endTime,\n      timeElapsed,\n      wpm: raw_wpm,\n      total_length,\n      correctChars,\n      text,\n      input,\n      startTime,\n    };\n\n    return {\n      wpm: wpm,\n      accuracy,\n      time: Math.round(timeElapsed),\n      rawWpm: raw_wpm,\n    };\n  }, [input, startTime, text]);\n\n  const BEFORETEXT = text?.substring(input.length - BEFORELIMIT, input.length);\n  const BEFORETEXTLASTWORD = BEFORETEXT?.split(\" \").at(-1);\n  const BEFOREINPUTLASTWORD = input?.substring(\n    input.length - BEFORETEXTLASTWORD.length,\n    input.length\n  );\n  const BEFORETEXTWITHOUTLASTWORD = withoutLast(BEFORETEXT?.split(\" \")).join(\n    \" \"\n  );\n  const BEFOREINPUTWITHOUTLASTWORD = input?.substring(\n    input.length - BEFORELIMIT,\n    input.length - 1 - BEFORETEXTLASTWORD.length\n  );\n  const INPUTATLASTWORDINTERVAL = input.at(-1 - BEFORETEXTLASTWORD.length);\n  const BEFOREINPUT = input?.substring(\n    input.length - BEFORELIMIT,\n    input.length\n  );\n  const AFTERTEXT = text?.substring(\n    input.length,\n    input.length + AFTERLIMIT - BEFOREINPUTLASTWORD.length\n  );\n  return (\n    <div className=\"d-center h-full w-full\">\n      {\n        <React.Fragment key={move && input.length}>\n          <div\n            className={\n              \"d-center w-[fit-content] gap-0 max-h-full text-4xl overflow-visible\"\n            }\n          >\n            {move == \"letter\" && (\n              <>\n                <div className=\"w-full flex justify-end\">\n                  <Diff\n                    source={BEFORETEXT}\n                    change={BEFOREINPUT}\n                    fadeOut={true}\n                  />\n                </div>\n                {input.at(-1) == \" \" && <div className=\"ms-2\" />}\n                <Cursor />\n                <pre className=\"w-full flex justify-start flex-nowrap nowrap text-gray-500\">\n                  {/* {text.at(input.length) == \" \" && <>&nbsp;</>} */}\n                  {AFTERTEXT}\n                </pre>\n              </>\n            )}\n            {move == \"word\" && (\n              <>\n                <div className=\"w-fit-content flex justify-end\">\n                  {BEFORELIMIT < input.length &&\n                    Array(BEFORETEXTLASTWORD.length).fill(<>&nbsp;</>)}\n                  <Diff\n                    source={BEFORETEXTWITHOUTLASTWORD}\n                    change={BEFOREINPUTWITHOUTLASTWORD}\n                    fadeOut={true}\n                  />\n                </div>\n                <div className={\"flex justify-start items-center scale-1.2\"}>\n                  {INPUTATLASTWORDINTERVAL == \" \" ? (\n                    <>&nbsp;</>\n                  ) : (\n                    <span className=\"text-red-400\">\n                      {INPUTATLASTWORDINTERVAL}\n                    </span>\n                  )}\n\n                  <Diff\n                    source={BEFORETEXTLASTWORD}\n                    change={BEFOREINPUTLASTWORD}\n                    fadeOut={false}\n                  />\n                  {input.at(-1) == \" \" && <div className=\"ms-2\" />}\n                  <Cursor />\n                </div>\n                <div className=\"d-center w-fit-content\">\n                  <pre className=\"w-full flex justify-start flex-nowrap nowrap text-gray-500\">\n                    {AFTERTEXT}\n                  </pre>\n                </div>\n              </>\n            )}\n          </div>\n        </React.Fragment>\n      }\n      <input\n        ref={inputRef}\n        type=\"text\"\n        value={input}\n        onChange={handleInput}\n        className=\"w-full bg-transparent h-0 p-0 m-0 border-none outline-none text-terminal-white text-lg absolute\"\n        placeholder=\"Start typing...\"\n        onBlur={(e) => {\n          e.target.focus();\n          return false;\n        }}\n      />\n    </div>\n  );\n};\nconst Style10 = ({ hours, minutes, props, dispatch }) => {\n  const [terminal, setTerminal] = useState(false);\n  const keyboardLayoutPreference = useSelector(selectKeyboardLayout);\n  const { move } = useSelector(selectTapeMode);\n  const { mode, words } = useSelector(selectTypingSettings);\n  return (\n    <div className=\"flex justify-between items-stretch h-screen\">\n      <div className=\"left justify-between h-full stack items-center px-5 py-10\">\n        <div className=\"top\"></div>\n        <div className=\"middle\"></div>\n        <div className=\"bottom\">\n          <ShareBtn />\n        </div>\n      </div>\n      <div className=\"middle justify-between w-full h-full stack items-center py-10\">\n        <div className=\"top\"></div>\n        <div className=\"middle\">\n          <KeyboardMapper />\n        </div>\n        <div className=\"bottom stack d-center gap-10 w-full\">\n          <div className=\"terminal d-center w-full stack\">\n            {terminal && <div className=\"d-center gap-10\"> {props.recommend.map((e,i)=><div className={\"item \"+(i==0?\"mb-3 underline\":\"\")}>{e}</div>)} </div>}\n            <Terminal {...props} hidden={!terminal} />\n            {!terminal && <TypeWriter />}{\" \"}\n          </div>\n\n          <div className=\"stack d-center\">\n            {!terminal && (\n              <div className=\"d-center settings px-10 py-5 gap-10\">\n                <div className=\"d-center rounded-lg bg-gray-800 px-3 py-1 gap-10\">\n                  {tapeModeOptions.map((e) => (\n                    <button\n                      key={e}\n                      onClick={() => dispatch(setTapeModeMovePref(e))}\n                      className={move == e ? \"text-red-500\" : \"text-gray-500\"}\n                    >\n                      {e}\n                    </button>\n                  ))}\n                </div>\n                <div className=\"d-center rounded-lg bg-gray-800 px-3 py-1 gap-10\">\n                  {modeOptions.map((e) => (\n                    <button\n                      disabled={e == \"timeLimit\"}\n                      key={e}\n                      onClick={() => dispatch(setTypingMode(e))}\n                      className={\n                        \"disabled:text-black \" +\n                        (mode == e ? \"text-red-500\" : \"text-gray-500\")\n                      }\n                    >\n                      {e}\n                    </button>\n                  ))}\n                </div>\n                {mode == \"words\" && (\n                  <div className=\"d-center rounded-lg bg-gray-800 px-3 py-1 gap-10\">\n                    {wordOptions.map((e) => (\n                      <button\n                        disabled={e == \"timeLimit\"}\n                        key={e}\n                        onClick={() => dispatch(setWords(e))}\n                        className={\n                          \"disabled:text-black \" +\n                          (words == e ? \"text-red-500\" : \"text-gray-500\")\n                        }\n                      >\n                        {e}\n                      </button>\n                    ))}\n                  </div>\n                )}\n              </div>\n            )}\n            <div className=\"d-center opts\">\n              <div className=\"d-center rounded-lg bg-gray-800 px-3 py-1 gap-10\">\n                <button\n                  onClick={() => setTerminal(true)}\n                  className={terminal ? \"text-red-500\" : \"text-gray-500\"}\n                  accessKey=\"t\"\n                >\n                  <u>T</u>erminal\n                </button>\n                <button\n                  onClick={() => setTerminal(false)}\n                  className={!terminal ? \"text-red-500\" : \"text-gray-500\"}\n                  accessKey=\"y\"\n                >\n                  T<u>y</u>per\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"github\">\n            {keyboardLayoutPreference == \"all\" || <GithubBtn />}\n            <LoggedInAs />\n          </div>\n        </div>\n      </div>\n      <div className=\"right justify-between h-full stack items-center px-5 py-10\">\n        <div className=\"top\"></div>\n        <div className=\"middle\"></div>\n        <div className=\"bottom\">\n          <VersionBtn />\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Style10;\n"],"names":["SpaceKey","key","show","expand","reactOther","ShiftKey","CapsLockKey","EnterKey","ControlKey","AltKey","TabKey","BackspaceKey","KeysAlphaNormal","KeysAlphaShift","map","e","toUpperCase","ModifyKey","isCapsLock","isShift","toLowerCase","alphabet","alphanumeric","all","Bumps","_jsx","className","Key","_ref","__key","i","isActive","isSthActive","delay","CapsLock","_jsxs","join","children","includes","_keyLayout","setKey","useState","Shift","setShift","Ctrl","setCtrl","Alt","setAlt","setCapsLock","keyLayoutPreference","useSelector","selectKeyboardLayout","keyboardDelay","selectKeyboardDelay","keyLayout","setKeyLayout","useEffect","AllLayouts","handleKeyDown","event","shiftKey","ctrlKey","altKey","getModifierState","handleKeyUp","document","addEventListener","removeEventListener","onDocumentBlur","onDocumentFocus","window","dispatch","useDispatch","LayoutOptions","layout","onClick","setKeyboardLayout","setKeyLayoutPreference","delayOptions","setKeyboardDelay","setKeyBoardDelayPreference","row","Diff","source","change","fadeOut","readyFlag","setReadyFlag","list","diff_list","alternateDiff","list_spaced","split","length","ee","ii","eee","iii","TypeWriter","inputRef","React","current","focus","input","setInput","setIsActive","startTime","setStartTime","text","setText","stats","setStats","navigate","useNavigate","punc","num","capitalize","mode","words","selectTypingSettings","move","selectTapeMode","changeThis","getRandomQuote","then","q","x","getFormattedText","console","log","getRandomWords","calculateStats","useCallback","endTime","Date","timeElapsed","__input","trim","__text","total_length","raw_wpm","Math","round","correctChars","filter","acc","wpm","accuracy","time","rawWpm","BEFORETEXT","substring","BEFORETEXTLASTWORD","at","BEFOREINPUTLASTWORD","BEFORETEXTWITHOUTLASTWORD","withoutLast","BEFOREINPUTWITHOUTLASTWORD","INPUTATLASTWORDINTERVAL","BEFOREINPUT","AFTERTEXT","_Fragment","Cursor","Array","fill","ref","type","value","onChange","target","state","tryAgain","placeholder","onBlur","_ref2","hours","minutes","props","terminal","setTerminal","keyboardLayoutPreference","ShareBtn","KeyboardMapper","recommend","Terminal","hidden","tapeModeOptions","setTapeModeMovePref","modeOptions","disabled","setTypingMode","wordOptions","setWords","accessKey","GithubBtn","LoggedInAs","VersionBtn"],"sourceRoot":""}