{"version":3,"file":"static/js/590.425658d8.chunk.js","mappings":"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","sources":["components/LandingPage/Styles/Style15.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport Markdown from \"react-markdown\";\nimport { useNavigate } from \"react-router-dom\";\nimport rehypeRaw from \"rehype-raw\";\nimport Terminal from \"../../Terminal/Terminal\";\n\nimport yaml from \"js-yaml\"\n\nfunction yamlToJson(yamlInput) {\n  const parsedYaml = yaml.load(yamlInput);\n\n  const jsonOutput =  {\n      command: {\n        exec: parsedYaml.map((item) => ({\n          name: item.name,\n          command: Array.isArray(item.command) ? item.command.join(\" && \") : item.command,\n        })),\n      },\n      action: \"batch-commands\",\n    }\n  \n\n  return jsonOutput;\n}\n\n\nexport default function Style15({ hours, minutes, props, dispatch }) {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [connected, setConnected] = useState(false);\n  const [ws, setWs] = useState(null);\n  const [terminationFlag, setTerminationFlag] = useState(false);\n  useEffect(() => {\n    if (terminationFlag) {\n      console.log(\"Navigating to auto-results\");\n      console.log(messages);\n      navigate(\"/auto/results\", { state: messages });\n    }\n  }, [terminationFlag]);\n\n  const navigate = useNavigate();\n  const batchActions = [\n    \"batch-created\",\n    \"batch-output\",\n    \"batch-error\",\n    \"batch-executed\",\n  ];\n\n  useEffect(() => {\n    if (ws) return;\n    const __ws = new WebSocket(\"ws://localhost:4595\");\n    setWs(__ws);\n\n    __ws.onopen = () => {\n      setConnected(true);\n      setMessages((prev) => [\n        ...prev,\n        { by: \"alert\", content: \"Connected to WebSocket\" },\n      ]);\n    };\n\n    __ws.onmessage = (event) => {\n      setMessages((prev) => [\n        ...prev,\n        { by: \"server\", content: JSON.parse(event.data) },\n      ]);\n      if (JSON.parse(event.data).action === \"batch-executed\")\n        setTerminationFlag(true);\n      console.log(event.data);\n    };\n\n    __ws.onerror = (error) => {\n      setMessages((prev) => [\n        ...prev,\n        { by: \"server\", content: \"Error: Connection issue\" },\n      ]);\n    };\n    __ws.onpong = () => {\n      setMessages((prev) => [\n        ...prev,\n        { by: \"server\", content: \"Pong received\" },\n      ]);\n    };\n    __ws.onclose = () => {\n      setConnected(false);\n      setMessages((prev) => [\n        ...prev,\n        { by: \"alert\", content: \"Disconnected from WebSocket\" },\n      ]);\n      setWs(null);\n      alert(\"Disconnected from WebSocket\");\n      console.log(\"Disconnected from WebSocket\");\n    };\n  }, [ws]);\n\n  window.ws = ws;\n  const sendMessage = () => {\n    if (ws) {\n      console.log(input.trim());\n      if (input.trim()) {\n        const json = yamlToJson(input.trim());\n        console.log(json);\n        ws.send(JSON.stringify(json));\n        setMessages((prev) => [...prev, { by: \"you\", content: \"input\" }]);\n        setInput(\"\");\n      } else {\n        console.log(\"No input\");\n      }\n    } else {\n      console.log(\"No connection\");\n    }\n  };\n  const sendInterrupt = () => {\n    if (ws) {\n      ws.send({ command: {}, action: \"interrupt\" });\n      setMessages((prev) => [...prev, { by: \"you\", content: \"Interrupt\" }]);\n    }\n  };\n\n  return (\n    <div className=\"p-4 w-full mx-auto bg-gray-900 text-white rounded-xl shadow-xl\">\n      <h2 className=\"text-xl font-bold mb-3\">WebSocket API Terminal</h2>\n      <div className=\"h-60 overflow-y-auto bg-black p-2 rounded-md mb-2\">\n        FULL LOGS:\n        {messages?.map((msg, index) => (\n          <div key={index} className=\"text-green-400 text-sm\">\n            <Markdown rehypePlugins={[rehypeRaw]}>\n              {JSON.stringify(msg?.content || \"\")}\n            </Markdown>\n          </div>\n        ))}\n      </div>\n      {messages?.findIndex((e) => e.content.action === \"batch-created\") !=\n        -1 && (\n        <div>\n          <Markdown>\n            {\n              messages?.find((e) => e?.content?.action === \"batch-created\")\n                ?.content?.output\n            }\n          </Markdown>\n        </div>\n      )}\n      <div className=\"flex w-full gap-2 mb-2 \">\n        <div className=\"w-full batch-output\">\n          BATCH OUTPUT:\n          {messages\n            ?.filter((e) => e.content.action === \"batch-output\")\n            .map((msg, index) => (\n              <div key={index} className=\"text-green-400 text-sm\">\n                <Markdown rehypePlugins={[rehypeRaw]}>\n                  {msg.content.output}\n                </Markdown>\n              </div>\n            ))}\n        </div>\n        <div className=\"w-full batch-error text-red-400\">\n          BATCH ERROR:\n          {messages\n            .filter((e) => e.content.action === \"batch-error\")\n            .map((msg, index) => (\n              <div key={index} className=\"text-red-400 text-sm\">\n                <Markdown rehypePlugins={[rehypeRaw]}>\n                  {JSON.stringify(msg.content)}\n                </Markdown>\n              </div>\n            ))}\n        </div>\n      </div>\n      <div className=\"flex gap-2\">\n        <textarea\n          autoFocus\n          className=\"flex-1 bg-gray-800 border-none text-white\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Type command...\"\n        />\n        <button onClick={() => sendMessage()} disabled={!connected}>\n          Send\n        </button>\n      </div>\n      <p className=\"mt-2 text-sm text-gray-400\">\n        Status: {connected ? \"Connected\" : \"Disconnected\"}\n      </p>\n      <div className=\"flex gap-2 mt-2\">\n        <button onClick={() => ws.close()} disabled={!connected}>\n          Disconnect\n        </button>\n        <button\n          onClick={() => {\n            setWs(new WebSocket(\"ws://localhost:4595\"));\n          }}\n          disabled={connected}\n        >\n          Connect\n        </button>\n        <button onClick={() => setMessages([])}>Clear</button>\n\n        <button onClick={() => ws.terminate()} disabled={!connected}>\n          Terminate\n        </button>\n        <button onClick={() => ws.close()} disabled={!connected}>\n          Close Connection\n        </button>\n        <button onClick={() => ws.send(\"ping\")} disabled={!connected}>\n          Ping\n        </button>\n\n        <button onClick={() => sendInterrupt()}>Interrupt</button>\n      </div>\n      <Terminal hidden={true} {...props} />\n    </div>\n  );\n}\n"],"names":["Style15","_ref","_messages$find","_messages$find$conten","hours","minutes","props","dispatch","messages","setMessages","useState","input","setInput","connected","setConnected","ws","setWs","terminationFlag","setTerminationFlag","useEffect","console","log","navigate","state","useNavigate","__ws","WebSocket","onopen","prev","by","content","onmessage","event","JSON","parse","data","action","onerror","error","onpong","onclose","alert","window","sendMessage","trim","json","yamlInput","command","exec","yaml","map","item","name","Array","isArray","join","send","stringify","_jsxs","className","children","_jsx","msg","index","Markdown","rehypePlugins","rehypeRaw","findIndex","e","find","_e$content","output","filter","autoFocus","value","onChange","target","placeholder","onClick","disabled","close","terminate","Terminal","hidden"],"sourceRoot":""}